#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const program = require('commander')
const inquirer = require('inquirer')
const ora = require('ora')
const download = require('download-git-repo')
const logger = require('../lib/logger')
const log = console.log

program
  .usage('init <template> [<project-name>]')
  .option('-c, --clone', 'Use git clone')

program.on('--help', () => {
  log()
  log('  Built-in template:')
  log()
  log('    begin-vue')
  log()
})

program.parse(process.argv)
if (program.args.length < 1) {
  program.help()
  process.exit()
}

let repository
const templte = program.args[0]
const hasSlash = templte.indexOf('/') > -1
const rawName = program.args[1] || '.'
const inPlace = rawName === '.'
const destination = path.resolve(rawName)
const clone = program.clone || false
const repoMap = {
  'begin-vue': 'ccbabi/begin-vue'
}

if (!hasSlash) {
  repository = repoMap[templte]
  if (!repository) {
    logger.warning('Templte no exists!')
    process.exit()
  }
} else {
  repository = templte
}

if (fs.existsSync(destination)) {
  const message = inPlace
    ? 'Current directory generation?'
    : `Directory [${rawName}] already exists, continue?ï¼Ÿ`

  inquirer.prompt([{
    type: 'confirm',
    name: 'answers',
    message
  }]).then(({ answers }) => {
    if (answers) down()
  }).catch(err => {
    throw err
  })
} else {
  down()
}

function down () {
  const spinner = ora('Wait a minute...').start()
  download(repository, rawName, { clone }, err => {
    spinner.stop()
    if (err) throw err
    logger.success('Done.')
  })
}
